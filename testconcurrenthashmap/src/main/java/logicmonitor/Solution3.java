package logicmonitor;

import java.util.LinkedHashMap;
import java.util.Map;

public class Solution3 {
  public static void main(String[] args) {
     //String s = "leetcode";
    //String s = "sTreSS";
    String s = "sttrreess";
    // String s = "lool";
    // String s = "aadadaad";
    //String s =
      //  "";
    System.out.println(firstUniqChar(s));
  }

  /*public static String firstUniqChar(String s) {
    char[] tempChar = s.toCharArray();

    Map<String, Integer> stringCountMap = new LinkedHashMap<>();

    for (int i = 0; i < tempChar.length; i++) {
      char c1 = tempChar[i];
      if(stringCountMap.get(String.valueOf(Character.toLowerCase(c1))) == null && stringCountMap.get(String.valueOf(Character.toUpperCase(c1))) == null) {
        stringCountMap.put(String.valueOf(c1), 1);
      } else {
        if(stringCountMap.get(String.valueOf(Character.toLowerCase(c1))) != null){
          stringCountMap.put(String.valueOf(Character.toLowerCase(c1)), stringCountMap.get(String.valueOf(Character.toLowerCase(c1))) + 1);
        } else {
          stringCountMap.put(String.valueOf(Character.toLowerCase(c1)), stringCountMap.get(String.valueOf(Character.toUpperCase(c1))) + 1);
        }
      }
    }
    if (stringCountMap.entrySet().stream().filter(stringIntegerEntry -> stringIntegerEntry.getValue()==1).findFirst().isPresent()){
      return stringCountMap.entrySet().stream().filter(stringIntegerEntry -> stringIntegerEntry.getValue()==1).findFirst().get().getKey();
    }

   return "";

    //return "";
  }*/

  public static String firstUniqChar(String s) {
    char[] tempChar = s.toCharArray();
    int[] c = new int[256];
    for (int i = 0; i < tempChar.length; i++) {
      char c1;
      if (s.codePointAt(i) >= 97 && s.codePointAt(i) <=122) {
        c1 = Character.toLowerCase(tempChar[i]);
      }
      c1 = Character.toLowerCase(tempChar[i]);
      c[c1] = c[c1] + 1;
    }
    for (int i = 0; i < tempChar.length; i++) {
      char c1 = Character.toLowerCase(tempChar[i]);
      if(c[c1] == 1) {
        return String.valueOf(c1);
      }
    }

    return "";

    //return "";
  }
  //too long time taken
  /*public static int fistUniqChar(String s) {
    char[] tempChar = s.toCharArray();
    for (int i = 0; i < tempChar.length; i++) {
      int x = i + 1;
      boolean matchFound = false;
      for (int j = x; j < tempChar.length; j++) {
        if(tempChar[i] != 'A' && tempChar[j] != 'A' && tempChar[i] == tempChar[j]) {
          tempChar[j] = 'A';
          matchFound = true;
        }
      }
      if (matchFound) tempChar[i] = 'A';
    }

    for (int i = 0; i < tempChar.length; i++) {
      if (tempChar[i] == 'A') {
        continue;
      } else return i;
    }
    return -1;
  }*/
}
